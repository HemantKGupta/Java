package chapter06.item34;

import java.util.Arrays;
import java.util.Collection;

public class TestOperation {
	// Test class to exercise all operations in "extension enum" 
		public static void main(String[] args) {
			double x = 2;
			double y = 3;
			test(ExtendedOperation.class, x, y);
			System.out.println(); 
			test2(Arrays.asList(ExtendedOperation.values()), x, y);
		}

		// test parameter is a bounded type token (Item 29)
		private static <T extends Enum<T> & Operation> void test(Class<T> opSet,
				double x, double y) {
			for (Operation op : opSet.getEnumConstants())
				System.out.printf("%f %s %f = %f%n", x, op, y, op.apply(x, y));
		}

		// test parameter is a bounded wildcard type (Item 28)
		private static void test2(Collection<? extends Operation> opSet, double x,
				double y) {
			for (Operation op : opSet)
				System.out.printf("%f %s %f = %f%n", x, op, y, op.apply(x, y));
		}
}
